name: Rust

on:
  workflow_dispatch:
  push:
    paths:
      # run when actions or source code are changed
      - .github/workflows/**
      - src/**
      - Cargo.toml
      - Cargo.lock
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run Cargo build step and cache for later
  build:
    runs-on: ubuntu-latest
    outputs:
      key: ${{ steps.outputs.cache_key.key }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - # by generating the cache key, we can reference it in dependencies
        name: Generate Cache Key
        id: cache_key
        run: |
          echo "
          key='${{ runner.os }}-${{ hashFiles('**/Cargo.lock', 'src/**') }}'
          " >> $GITHUB_OUTPUT

      - name: Cache Build
        uses: actions/cache@v4
        id: cache
        with:
          path: target/
          key: ${{ steps.outputs.cache_key.key }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo build --verbose

  # Tests the ODAWG library
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch Build
        uses: actions/cache@v4
        id: cache
        with:
          path: target/
          key: ${{ needs.build.outputs.key }}

      - name: Test
        run: cargo test --verbose
